resilience4j:
  circuitbreaker:
    configs:
      defecto: 
        sliding-window-size: 6
        failure-rate-threshold: 50
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 4
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s 
    instances:
      productos:
        base-config: defecto
  timelimiter:
    configs:
      defecto:
        timeout-duration: 6s
    instances:
      productos:
        base-config: defecto

spring:
  cloud:
    gateway:
      routes:
      - id: servicio-productos
        uri: lb://servicio-productos
        predicates:          - Path=/api/productos/**
#https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-after-route-predicate-factory
#          - Header=token, \d+
#          - Header=Content-Type,application/json
#          - Method= GET, POST
#          - Query=color
#          - Cookie=color, azul
        filters:
          - name: CircuitBreaker
            args:
              name: productos
              statusCodes: 500
#El fallbackUri tiene que ser distint API, que no apunte al mimos endpoint que produce el error por que entra en un loop              
              fallbackUri: foward:/api/items/ver/9/cantidad/5           - StripPrefix=2
          - EjemploCookie=Hola mi mensaje personalizado, usuario, ChinoRomero
# Esta es otra forma de agregar el filtro  >> detalle el "name" tiene que ser el prefijo de la clase en este caso "Ejemplo"GlobalFilter.java   
#          - name: Ejemplo
#            args:
#              mensaje: Hola mi mensaje personalizado
#              cookieNombre: usuario
#              cookieValor: ChinoRomero      - id: servicio-items
        uri: lb://servicio-items
        predicates:
          - Path=/api/items/**
        filters:
          - StripPrefix=2
# https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#the-addrequestheader-gatewayfilter-factory          
          - AddRequestHeader=token-request, 123456
          - AddResponseHeader=token-response, 12345678
          - SetResponseHeader=Content-Type, text/plain          
          - AddRequestParameter=nombre, cesar
      - id: servicio-oauth
        uri: lb://servicio-oauth
        predicates:
          - Path=/api/security/**
        filters:
          - StripPrefix=2
      - id: servicio-usuarios
        uri: lb://servicio-usuarios
        predicates:
          - Path=/api/usuarios/**
        filters:
          - StripPrefix=2     
             